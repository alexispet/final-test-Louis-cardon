name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Compose
        run: |
          echo -e "DB_DATABASE=\"${{ secrets.DB_DATABASE }}\"\nDB_USER=\"${{ secrets.DB_USER }}\"\nDB_PASSWORD=\"${{ secrets.DB_PASSWORD }}\"\nDB_HOST=\"${{ secrets.DB_HOST }}\"" > .env
      - run: docker compose up -d --build
      - run: sleep 10
      - run: docker compose logs app
      - run: docker compose exec app npm run test

  eslint-check:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

  dependency-audit:
    needs: [eslint-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run audit
        run: npm audit --audit-level=high

  build-and-push-docker:
    needs: [dependency-audit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PACKAGES_TOKEN }}

      - name: Set up Docker tags
        id: docker_tag
        run: |
          if [[ "$GITHUB_REF" == 'refs/heads/main' ]]; then
            echo "tag=latest" >> $GITHUB_ENV
          elif [[ "$GITHUB_REF" == 'refs/heads/develop' ]]; then
            echo "tag=develop" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/louis-cardon/finaltestlouis:${{ steps.docker_tag.outputs.tag }}
